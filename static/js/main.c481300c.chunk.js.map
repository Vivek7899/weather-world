{"version":3,"sources":["modules/CityComponent.js","modules/WeatherInfoComponent.js","App.js","index.js"],"names":["SearchBox","styled","form","AppLabel1","span","WelcomeWeatherLogo","img","CityComponent","props","updateCity","fetchWeather","src","onSubmit","onChange","e","target","value","placeholder","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","Location","Condition","WeatherInfoLabel","WeatherIcon","WeatherContainer","div","AppLabel2","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","WeatherComponent","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","WeatherIcons","sys","country","Date","getHours","getMinutes","speed","Container","AppLabel","App","useState","city","updateWeather","a","preventDefault","Axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c481300c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst SearchBox = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  margin: 20px;\r\n \r\n  border-radius: 2px;\r\n  & input {\r\n    padding: 10px;\r\n    font-size: 14px;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    font-family: Montserrat;\r\n    font-weight: bold;\r\n  }\r\n  & button {\r\n    background-color: black;\r\n    font-size: 14px;\r\n    padding: 0 10px;\r\n    margin-left:3px;\r\n    color: white;\r\n    border-radius:10px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    font-family: Montserrat;\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst AppLabel1 = styled.span`\r\n  color: \tblack;\r\n  margin: auto;\r\n  font-size: 30px;\r\n  text-shadow: 2px 2px 5px #7FFF00;\r\n  font-weight: bold;\r\n  font-family: 'Brush Script MT', cursive;\r\n`;\r\n\r\nconst WelcomeWeatherLogo = styled.img`\r\n  width: 200px;\r\n  height: 200px;\r\n  margin: 40px auto;\r\n`;\r\nconst CityComponent = (props) => {\r\n  const { updateCity, fetchWeather } = props;\r\n  return (\r\n    <>\r\n     <AppLabel1>\"Climate is what we Expect</AppLabel1>\r\n     <AppLabel1>Weather is what we Get ...\"</AppLabel1>\r\n      <WelcomeWeatherLogo src={\"icon/front.png\"} />\r\n      \r\n      <SearchBox onSubmit={fetchWeather}>\r\n        <input\r\n          onChange={(e) => updateCity(e.target.value)}\r\n          placeholder=\"Search City...\"\r\n        />\r\n       \r\n        <button type={\"submit\"}>Search</button>\r\n      </SearchBox>\r\n    </>\r\n  );\r\n};\r\nexport default CityComponent;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {WeatherIcons} from \"../App\";\r\n\r\nexport const WeatherInfoIcons = {\r\n    sunset: \"icon/temp.svg\",\r\n    sunrise: \"/icon/temp.svg\",\r\n    humidity: \"icon/humidity.svg\",\r\n    wind: \"icon/wind.svg\",\r\n    pressure: \"icon/pressure.svg\",\r\n};\r\nconst Location = styled.span`\r\n  margin: 15px auto;\r\n  text-transform: capitalize;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n`;\r\nconst Condition = styled.span`\r\n  margin: 20px auto;\r\n  text-transform: capitalize;\r\n  font-size: 14px;\r\n  & span {\r\n    font-size: 28px;\r\n  }\r\n`;\r\nconst WeatherInfoLabel = styled.span`\r\n  margin: 20px 25px 10px;\r\n  text-transform: capitalize;\r\n  text-align: start;\r\n  width: 90%;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n`;\r\nconst WeatherIcon = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: 5px auto;\r\n`;\r\nconst WeatherContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin: 30px auto;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nconst AppLabel2 = styled.span`\r\n  color: black;\r\n  margin: 20px auto;\r\n  text-shadow: 2px 2px 5px #7FFF00;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  font-family: 'Brush Script MT', cursive;\r\n`;\r\n\r\nconst WeatherInfoContainer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  margin: 5px 10px;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\n\r\nconst InfoIcon = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n`;\r\nconst InfoLabel = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  margin: 15px;\r\n  & span {\r\n    font-size: 12px;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n\r\nconst WeatherInfoComponent = (props) => {\r\n    const {name, value} = props;\r\n    return ( \r\n      <InfoContainer>\r\n            <InfoIcon src={WeatherInfoIcons[name]}/>\r\n            <InfoLabel>\r\n                {value}\r\n                <span>{name}</span>\r\n            </InfoLabel>\r\n        </InfoContainer>\r\n    );\r\n};\r\nconst WeatherComponent = (props) => {\r\n    const {weather} = props;\r\n    const isDay = weather?.weather[0].icon?.includes('d')\r\n    const getTime = (timeStamp) => {\r\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\r\n    }\r\n    return (\r\n        <>\r\n            <AppLabel2>Have A Nice Day ...</AppLabel2>\r\n            <WeatherContainer>\r\n                <Condition>\r\n                    <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>\r\n                    {`  |  ${weather?.weather[0].description}`}\r\n                </Condition>\r\n                <WeatherIcon src={WeatherIcons[weather?.weather[0].icon]}/>\r\n            </WeatherContainer>\r\n            <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\r\n\r\n            <WeatherInfoLabel>Weather Info :- </WeatherInfoLabel>\r\n            <WeatherInfoContainer>\r\n                <WeatherInfoComponent name={isDay ? \"sunset\" : \"sunrise\"}\r\n                                      value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}`}/>\r\n                <WeatherInfoComponent name={\"humidity\"} value={weather?.main?.humidity}/>\r\n                <WeatherInfoComponent name={\"wind\"} value={weather?.wind?.speed}/>\r\n                <WeatherInfoComponent name={\"pressure\"} value={weather?.main?.pressure}/>\r\n            </WeatherInfoContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatherComponent;","\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport CityComponent from \"./modules/CityComponent\";\nimport WeatherComponent from \"./modules/WeatherInfoComponent\";\n\nexport const WeatherIcons = {\n  \"01d\": \"/icon/sunny.svg\",\n  \"01n\": \"/icon/night.svg\",\n  \"02d\": \"/icon/day.svg\",\n  \"02n\": \"/icon/cloudy-night.svg\",\n  \"03d\": \"/icon/cloudy.svg\",\n  \"03n\": \"/icon/cloudy.svg\",\n  \"04d\": \"/icon/perfect-day.svg\",\n  \"04n\": \"/icon/cloudy-night.svg\",\n  \"09d\": \"/icon/rain.svg\",\n  \"09n\": \"/icon/rain-night.svg\",\n  \"10d\": \"/icon/rain.svg\",\n  \"10n\": \"/icon/rain-night.svg\",\n  \"11d\": \"/icon/storm.svg\",\n  \"11n\": \"/icon/storm.svg\",\n  \"12n\": \"/icon/smoke.png\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  padding: 20px 10px;\n  margin: auto;\n  border-radius: 10px;\n  box-shadow: 0 3px 6px 0 #555;\n  background: linear-gradient(30deg,#DC143C,pink,#7FFFD4);\n  font-family: Montserrat;\n`;\n\nconst AppLabel = styled.span`\n  color: black;\n  margin: 20px auto;\n  text-shadow: 2px 2px 5px red;\n  font-size: 40px;\n  font-weight: bold;\n  font-family: 'Brush Script MT', cursive;\n`;\n\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=65628d1badebf84818d91fc1f9ed83f0`,\n    );\n    updateWeather(response.data);\n  };\n  return (\n    <Container>\n      <AppLabel>Weather World</AppLabel>\n     \n      {city && weather ? (\n        <WeatherComponent weather={weather} city={city} />\n      ) : (\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}